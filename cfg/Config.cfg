#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import int_t, double_t, bool_t, str_t
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator

PACKAGE = "drone_arena"

gen = ParameterGenerator()

gen.add("eta", double_t, 0, "eta [s]", 1, 0.1, 2)
gen.add("tau", double_t, 0, "tau [s]", .5, 0.1, 2)
gen.add("rotation_tau", double_t, 0, "rotation tau [s]", .5, 0.1, 2)
gen.add("position_tol", double_t, 0, "target position tolerance [m]", .1, 0.01, 1.0)
gen.add("angle_tol", double_t, 0, "target yaw tolerance [rad]", .2, 0.01, 3.0)
gen.add("delay", double_t, 0, "delay [s]", .3, 0.0, 0.5)
gen.add("enable_fence", bool_t, 0, "enable fence", True)

gen.add("max_acceleration", double_t, 0, "max acceleration", 2, 0.1, 5)
gen.add("max_speed", double_t, 0, "max speed", 1.5, 0.0, 5)
gen.add("max_vertical_speed", double_t, 0, "max vertical speed", 0.5, 0.0, 2)
gen.add("max_angular_speed", double_t, 0, "max angular speed", 1, 0.1, 6)
teleop_frame_enum = gen.enum([gen.const("Body", int_t, 0, "Body Frame"),
                              gen.const("World", int_t, 1, "World"),
                              gen.const("Head", int_t, 2, "Head")],
                             "An enum to set teleop frame")

gen.add("teleop_frame", int_t, 0, "The teleop frame", 0, 0, 3,
        edit_method=teleop_frame_enum)

teleop_mode_enum = gen.enum([gen.const("Cmd", int_t, 0, "Command"),
                             gen.const("Speed", int_t, 1, "Speed")],
                            "An enum to set teleop mode")

gen.add("teleop_mode", int_t, 0, "The teleop mode", 0, 0, 3,
        edit_method=teleop_mode_enum)

target_mode_enum = gen.enum([gen.const("Teleop", int_t, 1, "Teleoperation"),
                             gen.const("Cmd", int_t, 2, "Command"),
                             gen.const("Pos", int_t, 3, "Position"),
                             gen.const("Vel", int_t, 4, "Velocity in body frame"),
                             gen.const("BodyVel", int_t, 5, "Velocity in fixed frame"),
                             gen.const("Odom", int_t, 6, "Odometry")],
                            "An enum to set the target mode")

gen.add("target_mode", int_t, 0, "The target mode", 1, 1, 6,
        edit_method=target_mode_enum)

gen.add("target_source_topic", str_t, 0, "The target source topic ", "")

target_angle_mode_enum = gen.enum([gen.const("Sync", int_t, 0, "Synch"),
                                   gen.const("Teleop", int_t, 1, "Teleop"),
                                   gen.const("Cmd", int_t, 2, "Command"),
                                   gen.const("Point", int_t, 3, "Point"),
                                   gen.const("Vel", int_t, 4, "Vel"),
                                   gen.const("TargetPoint", int_t, 5, "TargetPoint"),
                                   gen.const("TargetOrientation", int_t, 6, "TargetOrientation")],
                                  "An enum to set the target mode")

gen.add("target_angle_mode", int_t, 0, "The target angle mode", 0, 0, 6,
        edit_method=target_angle_mode_enum)

gen.add("track_distance", double_t, 0, "track distance", 1.5, 0.8, 3)
gen.add("track_altitude_as_relative", bool_t, 0, "track altitude relative", False)
gen.add("track_relative_altitude", double_t, 0, "track altitude difference", -0.2, -0.5, 0.5)
gen.add("track_altitude", double_t, 0, "track absolute altitude", 1.5, 0.3, 2)
gen.add("track_yaw", double_t, 0, "track relative yaw", 0, -3.2, 3.2)

gen.add("target_source_timeout", double_t, 0, "input timeout [s]", 0.3, 0.1, 2)
gen.add("output_timeout", double_t, 0, "output timeout [s]", 0.2, 0.1, 0.5)
gen.add("localization_timeout", double_t, 0, "localization timeout [s]", 1, 0.1, 3)

gen.add("publish_target", bool_t, 0, "publish a desired target (pose stamped)", True)
gen.add("publish_body_vel", bool_t, 0, "publish a desired velocity in body frame (twist)", True)
gen.add("publish_cmd", bool_t, 0, "publish a desired cmd (twist)", True)

exit(gen.generate(PACKAGE, "drone_arena", "Arena"))
